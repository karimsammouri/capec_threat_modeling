ID,Name,Description,Likelihood Of Attack,Typical Severity,Mitigations,Example Instances
692,Spoof Version Control System Commit Metadata,"An adversary spoofs metadata pertaining to a Version Control System (VCS) (e.g., Git) repository's commits to deceive users into believing that the maliciously provided software is frequently maintained and originates from a trusted source.",Medium,High,"::Before downloading open-source software, perform precursory metadata checks to determine the author(s), frequency of updates, when the software was last updated, and if the software is widely leveraged.::Reference vulnerability databases to determine if the software contains known vulnerabilities.::Only download open-source software from reputable hosting sites or package managers.::Only download open-source software that has been adequately signed by the developer(s). For repository commits/tags, look for the Verified status and for developers leveraging Vigilant Mode (GitHub) or similar modes.::After downloading open-source software, ensure integrity values have not changed.::Before executing or incorporating the software, leverage automated testing techniques (e.g., static and dynamic analysis) to determine if the software behaves maliciously.::","::In July 2022, Checkmarx reported that GitHub commit metadata could be spoofed if unsigned commits were leveraged by the repository. Adversaries were able to spoof commit contributors, as well as the date/time of the commit. This resulted in commits appearing to originate from trusted developers and a GitHub activity graph that duped users into believing that the repository had been maintained for a significant period of time. The lack of commit metadata validation ultimately allowed adversaries to propagate malware to unsuspecting victims [REF-719] [REF-720].::"
